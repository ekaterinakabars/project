{"version":3,"sources":["components/Header.js","components/Step3.js","components/MainContainer.js","DataContext.js","components/Result.js","components/Form.js","components/Input.jsx","components/PrimarryButton.js","components/Step1.js","components/Step2.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","fontFamily","margin","spacing","textAlign","fontSize","color","textShadow","Header","styles","Typography","className","component","variant","request","a","fetch","response","json","data","console","error","message","getData","log","marginTop","display","flexDirection","alignItems","MainContainer","children","props","Container","container","maxWidth","DataContext","createContext","DataProvider","useState","setData","Provider","value","setValues","values","prevData","useData","useContext","marginBottom","table","Result","kata","setKata","useEffect","getDataDevice","entries","Object","filter","entry","TableContainer","Paper","Table","TableHead","TableRow","TableCell","align","TableBody","map","src","img","alt","width","height","to","Form","noValidate","Input","forwardRef","ref","TextField","inputRef","fullWidth","PrimaryButton","Button","type","schema","yup","shape","firstName","required","lastName","email","password","Step1","history","useHistory","useForm","defaultValues","text","mode","resolver","yupResolver","register","handleSubmit","errors","formState","onSubmit","push","id","label","name","helperText","location","Step2","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAKMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,WAAY,mBACZC,OAAQH,EAAMI,QAAQ,EAAG,EAAG,GAC5BC,UAAW,SACXC,SAAU,OACVC,MAAO,WACPC,WAAY,4BAIPC,EAAS,WAClB,IAAMC,EAASZ,IACf,OACI,cAACa,EAAA,EAAD,CAAYC,UAAWF,EAAOT,KAC1BY,UAAU,KACVC,QAAQ,KAFZ,mC,yCCjBOC,I,2EAAf,8BAAAC,EAAA,+EAE+BC,MAAM,gEAFrC,cAEcC,EAFd,gBAG2BA,EAASC,OAHpC,cAGcC,EAHd,yBAIeA,GAJf,kCAMQC,QAAQC,MAAM,KAAMC,SAN5B,2D,sBAUO,SAAeC,IAAtB,+B,4CAAO,4BAAAR,EAAA,+EAEoBD,IAFpB,cAEOK,EAFP,yBAGQA,GAHR,gCAKCC,QAAQI,IAAR,MALD,0D,iECRD3B,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFyB,UAAW1B,EAAMI,QAAQ,GACzBuB,QAAS,OACTC,cAAe,SACfC,WAAY,cAMPC,EAAgB,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,SAAaC,EAAY,iBAC/CtB,EAASZ,IACf,OACI,cAACmC,EAAA,EAAD,yBAEIrB,UAAWF,EAAOT,KAClBiC,UAAU,OACVC,SAAS,MACLH,GALR,aAMKD,M,+DCrBPK,EAAcC,0BAEPC,EAAe,SAAC,GAAkB,IAAhBP,EAAe,EAAfA,SAC3B,EAAwBQ,mBAAS,IAAjC,mBAAOnB,EAAP,KAAaoB,EAAb,KAOA,OAAO,cAACJ,EAAYK,SAAb,CAAsBC,MAAO,CAAEtB,OAAMuB,UAN1B,SAACC,GACfJ,GAAQ,SAACK,GAAD,mBAAC,eACFA,GACAD,QAGJ,SACFb,KAGIe,EAAU,kBAAMC,qBAAWX,I,SCNlCtC,EAAYC,YAAW,CACzBE,KAAM,CACF+C,aAAc,QAElBC,MAAO,CACHD,aAAc,UAKTE,EAAS,WAGlB,MAAwBX,mBAAS,KAAjC,mBAAOY,EAAP,KAAaC,EAAb,KACAC,qBAAU,WAAM,4CACZ,4BAAArC,EAAA,sEACuBQ,IADvB,OACUJ,EADV,OAEIgC,EAAQhC,GAFZ,2CADY,yBAAC,WAAD,wBAKZkC,KACD,IAMH,IAAM5C,EAASZ,IACPsB,EAAS0B,IAAT1B,KAIFmC,EAAUC,OAAOD,QAAQnC,GAAMqC,QAAO,SAACC,GAAD,MAAwB,UAAbA,EAAM,MAE7D,OAKI,eAAC,EAAD,WACI,cAAC/C,EAAA,EAAD,CAAYE,UAAU,KAAKC,QAAQ,KAAnC,sCAKA,cAAC6C,EAAA,EAAD,CAAgB/C,UAAWF,EAAOT,KAAMY,UAAW+C,IAAnD,SACI,eAACC,EAAA,EAAD,CAAOjD,UAAWF,EAAOuC,MAAzB,UACI,cAACa,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,oBAGA,cAACA,EAAA,EAAD,CAAWC,MAAM,QAAjB,wBAKR,cAACC,EAAA,EAAD,UAAYX,EAAQY,KAAI,SAAAT,GAAK,OACzB,eAACK,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,UAAYN,EAAM,KAElB,cAACM,EAAA,EAAD,CAAWC,MAAM,QAAjB,SACKP,EAAM,OAJAA,EAAM,cAc7BP,EAAO,qBAAKiB,IAAKjB,EAAKkB,IAAKC,IAAI,GAAGC,MAAM,MAAMC,OAAO,QAAW,eAGpE,cAAC,IAAD,CAAMC,GAAG,IAAT,6B,eClFN3E,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFsE,MAAO,OACP7C,UAAW1B,EAAMI,QAAQ,QAMpBsE,EAAO,SAAC,GAA4B,IAA1B3C,EAAyB,EAAzBA,SAAaC,EAAY,iBAEtCtB,EAASZ,IACf,OAAO,8CAAMc,UAAWF,EAAOT,KAAM0E,YAAU,GAAK3C,GAA7C,aAAqDD,M,SCXnD6C,EAAQC,sBAAW,SAAC7C,EAAO8C,GACtC,OACE,cAACC,EAAA,EAAD,aACEjE,QAAQ,WACRX,OAAO,SACP6E,SAAUF,EACVG,WAAS,GACLjD,O,SCPJlC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFE,OAAQH,EAAMI,QAAQ,EAAG,EAAG,QAIvB8E,EAAgB,SAAC,GAAyB,IAAvBnD,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAChCtB,EAASZ,IACf,OAAO,cAAEqF,EAAA,EAAF,yBACHvE,UAAWF,EAAOT,KAClBmF,KAAK,SACLH,WAAS,EACTnE,QAAQ,YACRP,MAAM,WACFyB,GAND,aAOFD,M,wBCPHsD,EAASC,MAAaC,MAAM,CAC9BC,UAAWF,MAGNG,SAAS,kCACdC,SAAUJ,MAGLG,SAAS,iCACdE,MAAOL,MAIFG,SAAS,8BACdG,SAAUN,MAGLG,SAAS,mCAQLI,EAAQ,WAAO,IAAD,QACjBC,EAAUC,cAChB,EAA4BjD,IAApB1B,EAAR,EAAQA,KAAMuB,EAAd,EAAcA,UAEd,EAA0DqD,YAAQ,CAC9DC,cAAe,CAAET,UAAWpE,EAAKoE,UAAWE,SAAUtE,EAAKsE,SAAUC,MAAOvE,EAAKuE,MAAOC,SAAUxE,EAAKwE,SAAUM,KAAM9E,EAAK8E,MAC5HC,KAAM,SACNC,SAAUC,YAAYhB,KAHlBiB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAA2BC,EAA7C,EAAgCC,UAAaD,OAU7C,OACI,eAAC,EAAD,WACI,cAAC7F,EAAA,EAAD,CACIE,UAAU,KACVC,QAAQ,KAFZ,gCAKA,eAAC,EAAD,CAAM4F,SAAUH,GAXP,SAACnF,GACd0E,EAAQa,KAAK,UACbhE,EAAUvB,MASN,UACI,cAACwD,EAAD,2BACQ0B,EAAS,cADjB,IAGIM,GAAG,YACHxB,KAAK,OACLyB,MAAM,aACNC,KAAK,YACLxF,QAASkF,EAAOhB,UAChBuB,WAAU,OAAEP,QAAF,IAAEA,GAAF,UAAEA,EAAQhB,iBAAV,aAAE,EAAmBjE,WAGnC,cAACqD,EAAD,2BAEQ0B,EAAS,aAFjB,IAGIM,GAAG,WACHxB,KAAK,OACLyB,MAAM,YACNC,KAAK,WACLxF,OAAQkF,EAAOd,SACfqB,WAAU,OAAEP,QAAF,IAAEA,GAAF,UAAEA,EAAQd,gBAAV,aAAE,EAAkBnE,WAIlC,cAACqD,EAAD,2BAEQ0B,EAAS,UAFjB,IAGIlB,KAAK,QACLwB,GAAG,QACHC,MAAM,QACNC,KAAK,QACLxF,QAASkF,EAAOb,MAChBoB,WAAU,OAAEP,QAAF,IAAEA,GAAF,UAAEA,EAAQb,aAAV,aAAE,EAAepE,WAG/B,cAACqD,EAAD,2BAEQ0B,EAAS,aAFjB,IAGIM,GAAG,WACHxB,KAAK,WACLyB,MAAM,WACNC,KAAK,WACLxF,QAASkF,EAAOZ,SAChBmB,WAAU,OAAEP,QAAF,IAAEA,GAAF,UAAEA,EAAQZ,gBAAV,aAAE,EAAkBrE,QAC9BkE,UAAQ,KAGZ,cAAC,EAAD,0BC3FVJ,GAASC,MACVC,MAAM,CACHW,KAAMZ,MAEDG,SAAS,0BACdqB,KAAMxB,MAEDG,SAAS,0BACduB,SAAU1B,MAELG,SAAS,4BAMTwB,GAAQ,WAAO,IAAD,MAYjBnB,EAAUC,cAChB,EAA4BjD,IAApB1B,EAAR,EAAQA,KAAMuB,EAAd,EAAcA,UAEd,EAA0DqD,YAAQ,CAE9DC,cAAe,CACXC,KAAM9E,EAAK8E,KACXY,KAAM1F,EAAK0F,KACXE,SAAU5F,EAAK4F,UAInBb,KAAM,SACNC,SAAUC,YAAYhB,MAVlBiB,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAA2BC,EAA7C,EAAgCC,UAAaD,OAoB7C,OAAQ,eAAC,EAAD,WACJ,cAAC7F,EAAA,EAAD,CACIE,UAAU,KACVC,QAAQ,KAFZ,gCAMA,eAAC,EAAD,CAAM4F,SAAUH,GAbH,SAACnF,GACd0E,EAAQa,KAAK,WACbhE,EAAUvB,MAWV,UAEI,cAACwD,EAAD,2BACQ0B,EAAS,SADjB,IAEIlB,KAAK,OACLwB,GAAG,OACHC,MAAM,OACNC,KAAK,OACLxF,QAASkF,EAAON,KAChBa,WAAU,OAAEP,QAAF,IAAEA,GAAF,UAAEA,EAAQN,YAAV,aAAE,EAAc3E,QAC1BkE,UAAQ,KAEZ,cAACb,EAAD,2BACQ0B,EAAS,SADjB,IAEIlB,KAAK,OACLwB,GAAG,OACHC,MAAM,OACNC,KAAK,OACLxF,QAASkF,EAAOM,KAChBC,WAAU,OAAEP,QAAF,IAAEA,GAAF,UAAEA,EAAQM,YAAV,aAAE,EAAcvF,QAC1BkE,UAAQ,KAEZ,cAACb,EAAD,2BACQ0B,EAAS,aADjB,IAEIlB,KAAK,WACLwB,GAAG,WACHC,MAAM,WACNC,KAAK,WACLxF,QAASkF,EAAOQ,SAChBD,WAAU,OAAEP,QAAF,IAAEA,GAAF,UAAEA,EAAQQ,gBAAV,aAAE,EAAkBzF,QAC9BkE,UAAQ,KAOZ,cAAC,EAAD,0BC5EGyB,OAvBf,WACE,OAAQ,mCACN,eAAC,IAAD,CAAQC,SAAS,WAAjB,UAEE,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIxG,UAAWgF,IACjC,cAAC,IAAD,CAAOuB,OAAK,EAACC,KAAK,SAASxG,UAAWoG,KACtC,cAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,UAAUxG,UAAWqC,aCPhCoE,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,UACE,cAAC,GAAD,QAGJC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.3fbe2d5e.chunk.js","sourcesContent":["import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\"\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        fontFamily: \"Permanent Marker\",\n        margin: theme.spacing(3, 0, 2),\n        textAlign: \"center\",\n        fontSize: \"40px\",\n        color: \"deeppink\",\n        textShadow: \"1px 1px  darkmagenta\",\n    }\n}))\n\nexport const Header = () => {\n    const styles = useStyles();\n    return (\n        <Typography className={styles.root}\n            component=\"h1\"\n            variant=\"h9\">\n            Fill in these fields\n        </Typography>\n    )\n}\n\n\n\n\n\n\n","// import fetch from 'node-fetch';\n\nasync function request() {\n    try {\n        const response = await fetch('https://run.mocky.io/v3/286e9498-a855-4ddb-b8bb-3c1b80d8b3ac')\n        const data = await response.json();\n        return data\n    } catch (error) {\n        console.error(error.message)\n    }\n}\n\nexport async function getData() {\n    try {\n        const data = await request();\n        return data\n    } catch (error) {\n        console.log(error);\n    }\n}\n\n// module.exports = {\n//     request\n\n// }","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Container } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: theme.spacing(4),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\"\n\n\n    }\n}))\n\nexport const MainContainer = ({ children, ...props }) => {\n    const styles = useStyles()\n    return (\n        <Container\n\n            className={styles.root}\n            container=\"main\"\n            maxWidth=\"xs\"\n            {...props}>\n            {children}\n        </Container>\n\n\n    )\n};","import React, { createContext, useContext, useState } from \"react\";\n\n\nconst DataContext = createContext();\n\nexport const DataProvider = ({ children }) => {\n    const [data, setData] = useState({})\n    const setValues = (values) => {\n        setData((prevData) => ({\n            ...prevData,\n            ...values,\n        }))\n    }\n    return <DataContext.Provider value={{ data, setValues }}>\n        {children}</DataContext.Provider>\n}\n\nexport const useData = () => useContext(DataContext)\n\n","import React, { useState, useEffect, } from \"react\";\nimport { getData } from \"./Step3\";\nimport { MainContainer } from \"./MainContainer\";\nimport { Table, Paper, TableContainer, Typography, TableHead, TableBody, TableRow, TableCell } from \"@material-ui/core\";\nimport { useData } from \"../DataContext\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/styles\";\n\n\n\n\nconst useStyles = makeStyles({\n    root: {\n        marginBottom: \"30px\"\n    },\n    table: {\n        marginBottom: \"30px\"\n\n    }\n})\n\nexport const Result = () => {\n\n\n    const [kata, setKata] = useState(\"1\")\n    useEffect(() => {\n        async function getDataDevice() {\n            const data = await getData()\n            setKata(data);\n        }\n        getDataDevice()\n    }, []);\n\n\n\n\n\n    const styles = useStyles()\n    const { data } = useData()\n\n\n\n    const entries = Object.entries(data).filter((entry) => entry[0] !== \"files\")\n\n    return (\n\n\n\n\n        <MainContainer>\n            <Typography component=\"h2\" variant=\"h5\">\n                📋 Form values\n\n\n            </Typography>\n            <TableContainer className={styles.root} component={Paper}>\n                <Table className={styles.table}>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>\n                                Field\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                Value\n                            </TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>{entries.map(entry => (\n                        <TableRow key={entry[0]}>\n                            <TableCell>{entry[0]}\n                            </TableCell>\n                            <TableCell align=\"right\">\n                                {entry[1]}</TableCell>\n                        </TableRow>\n                    ))\n                    }\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n\n            {\n                kata ? <img src={kata.img} alt=\"\" width=\"400\" height=\"250\" /> : \"please await\"\n            }\n\n            <Link to=\"/\">Start over </Link>\n        </MainContainer>)\n}\n\n\n\n\n\n\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n        marginTop: theme.spacing(1),\n\n\n    }\n}))\n\nexport const Form = ({ children, ...props }) => {\n\n    const styles = useStyles()\n    return <form className={styles.root} noValidate {...props}>{children}</form>\n}","import React, { forwardRef } from \"react\";\n\nimport TextField from \"@material-ui/core/TextField\";\n\nexport const Input = forwardRef((props, ref) => {\n  return (\n    <TextField\n      variant=\"outlined\"\n      margin=\"normal\"\n      inputRef={ref}\n      fullWidth\n      {...props}\n    ></TextField>\n  );\n});\n","import { Button } from \"@material-ui/core\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        margin: theme.spacing(3, 0, 2)\n    }\n}))\n\nexport const PrimaryButton = ({ children, props }) => {\n    const styles = useStyles()\n    return < Button\n        className={styles.root}\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        {...props}>\n        {children}\n    </Button>\n}","import { Typography } from \"@material-ui/core\";\nimport { React } from \"react\";\nimport { Form } from \"./Form\";\nimport { MainContainer } from \"./MainContainer\";\nimport { Input } from \"./Input\"\nimport { PrimaryButton } from \"./PrimarryButton\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport { useHistory } from \"react-router\";\nimport { useData } from \"../DataContext\";\n\nconst schema = yup.object().shape({\n    firstName: yup\n        .string()\n        // .matches(/^([^0-9]*)$/, \"First name should not contain numbers\")\n        .required(\"First name is a required field\"),\n    lastName: yup\n        .string()\n        // .matches(/^([^0-9]*)$/, \"Last name should not contain numbers\")\n        .required(\"Last name is a required field\"),\n    email: yup\n        .string()\n\n        // .matches(/^([^0-9]*)$/, \"email  should not contain numbers\")\n        .required(\"email  is a required field\"),\n    password: yup\n        .number()\n        // .matches(/^([^0-9]*)$/, \"password  should not contain numbers\")\n        .required(\"password  is a required field\"),\n    // text: yup\n    //     .string()\n    //     // .matches(/^([^0-9]*)$/, \"text  should not contain numbers\")\n    //     .required(\"text  is a required field\"),\n\n})\n\nexport const Step1 = () => {\n    const history = useHistory()\n    const { data, setValues } = useData()\n\n    const { register, handleSubmit, formState: { errors } } = useForm({\n        defaultValues: { firstName: data.firstName, lastName: data.lastName, email: data.email, password: data.password, text: data.text },\n        mode: \"onBlur\",\n        resolver: yupResolver(schema)\n    })\n\n    const onSubmit = (data) => {\n        history.push(\"/step2\")\n        setValues(data)\n    }\n    return (\n        <MainContainer>\n            <Typography\n                component=\"h2\"\n                variant=\"h5\" >\n                🦄 Step1\n            </Typography>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n                <Input\n                    {...register(\"firstName\")}\n\n                    id=\"firstName\"\n                    type=\"text\"\n                    label=\"First Name\"\n                    name=\"firstName\"\n                    error={!!errors.firstName}\n                    helperText={errors?.firstName?.message}\n                />\n\n                <Input\n\n                    {...register(\"lastName\")}\n                    id=\"lastName\"\n                    type=\"text\"\n                    label=\"Last Name\"\n                    name=\"lastName\"\n                    error={!errors.lastName}\n                    helperText={errors?.lastName?.message}\n                />\n\n\n                <Input\n\n                    {...register(\"email\")}\n                    type=\"email\"\n                    id=\"email\"\n                    label=\"Email\"\n                    name=\"email\"\n                    error={!!errors.email}\n                    helperText={errors?.email?.message}\n                />\n\n                <Input\n\n                    {...register(\"password\")}\n                    id=\"password\"\n                    type=\"password\"\n                    label=\"password\"\n                    name=\"password\"\n                    error={!!errors.password}\n                    helperText={errors?.password?.message}\n                    required\n                />\n\n                <PrimaryButton>next</PrimaryButton>\n            </Form>\n        </MainContainer>\n    )\n}","import { Typography } from \"@material-ui/core\";\nimport { PrimaryButton } from \"./PrimarryButton\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router\";\nimport { Form } from \"./Form\";\nimport { MainContainer } from \"./MainContainer\";\nimport { Input } from \"./Input\";\nimport * as yup from 'yup';\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport { useData } from \"../DataContext\";\n\n\n\nconst schema = yup.object()\n    .shape({\n        text: yup\n            .string()\n            .required(\"text is required field\"),\n        name: yup\n            .string()\n            .required(\"text is required field\"),\n        location: yup\n            .string()\n            .required(\"text is required field\"),\n\n    })\n\n\n\nexport const Step2 = () => {\n    // const [kata, setKata] = useState(\"1\")\n    // useEffect(() => {\n    //     async function getDataDevice() {\n    //         const data = await getData()\n    //         setKata(data);\n    //     }\n    //     getDataDevice()\n    // }, []);\n\n\n\n    const history = useHistory()\n    const { data, setValues } = useData()\n\n    const { register, handleSubmit, formState: { errors } } = useForm({\n\n        defaultValues: {\n            text: data.text,\n            name: data.name,\n            location: data.location\n\n        },\n\n        mode: \"onBlur\",\n        resolver: yupResolver(schema)\n    })\n\n\n    const onSubmit = (data) => {\n        history.push(\"/result\")\n        setValues(data)\n\n    }\n\n    return (<MainContainer >\n        <Typography\n            component=\"h2\"\n            variant=\"h8\" >\n            🦄 Step2\n        </Typography>\n\n        <Form onSubmit={handleSubmit(onSubmit)} >\n\n            <Input\n                {...register(\"text\")}\n                type=\"text\"\n                id=\"text\"\n                label=\"text\"\n                name=\"text\"\n                error={!!errors.text}\n                helperText={errors?.text?.message}\n                required />\n\n            <Input\n                {...register(\"name\")}\n                type=\"name\"\n                id=\"name\"\n                label=\"name\"\n                name=\"name\"\n                error={!!errors.name}\n                helperText={errors?.name?.message}\n                required />\n\n            <Input\n                {...register(\"location\")}\n                type=\"location\"\n                id=\"location\"\n                label=\"location\"\n                name=\"location\"\n                error={!!errors.location}\n                helperText={errors?.location?.message}\n                required />\n\n            {/* {\n                kata ? <img src={kata.img} alt=\"\" width=\"400\" height=\"250\" /> : \"please await\"\n            } */}\n\n\n            <PrimaryButton>next</PrimaryButton>\n\n        </Form >\n    </MainContainer>\n    )\n}\n\n\n\n","import React from 'react'\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport './App.css';\nimport { Header } from './components/Header';\nimport { Result } from './components/Result';\nimport { Step1 } from './components/Step1';\nimport { Step2 } from './components/Step2';\n\n\nfunction App() {\n  return (<>\n    <Router basename='/project'>\n\n      <Header />\n\n      <Switch>\n        <Route exact path=\"/\" component={Step1} />\n        <Route exact path='/step2' component={Step2} />\n        <Route exact path='/result' component={Result} />\n      </Switch>\n\n\n\n    </Router>\n\n\n  </>\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { DataProvider } from './DataContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataProvider>\n      <App />\n    </DataProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}